@* @model TestMVC.Models.ProductDTO.Root; *@

<script type="text/javascript">
    let listProduct = [];
    let currentIndex = 0;
    $(document).ready(function () {

        $("#input-search").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#table-product tbody>tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

        loadItems('');
    });

    async function loadItems(isCloseModal) {
        
        if(isCloseModal === 'closeModal'){
            $('#staticBackdrop').modal('hide');
        }

        const response = await fetchGetData('loadItems');
        console.log('loadItems', response);
        if (!response) {
            return;
        }
        const table = document.getElementById('table-tbody-detail');
        console.log('table', table);
        listProduct = response.products;
        console.log('listProduct', listProduct);
        let body = '';
        for (let i = 0; i < listProduct.length; i++) {
            body += '<tr>';
            body += '<td id="pk-' + i + '" class="text-primary hover" style="font-size: 28px;text-align: center;">';
            body += '<button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop" onclick="showModal(' + i + ')"><i class="fas fa-edit" ></i></button></td>';
            body += '<td>' + listProduct[i].title + '</td>';
            body += '<td>' + listProduct[i].description + '</td>';
            body += '<td>' + listProduct[i].price + '</td>';
            body += '<td>' + listProduct[i].discountPercentage + '</td>';
            body += '<td><img src="' + listProduct[i].thumbnail + '" alt="a description of the image" style="width: 100px;height: 100px;object-fit: scale-down;"></td>';
            body += '<td>' + listProduct[i].rating + '</td>';
            body += '<td>' + listProduct[i].stock + '</td>';
            body += '<td>' + listProduct[i].brand + '</td>';
            body += '<td>' + listProduct[i].category + '</td>';
            body += '</tr>';
        }
        table.innerHTML = body;
    }


    async function fetchGetData(route) {
        const response = await fetch(`${route}`);
        const data = await response.json();
        return data;
    }

    async function fetchPostData(route, body) {
        const response = await fetch(`${route}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json', 
                'charset': 'utf-8'
            },
            body: JSON.stringify(body)
        });
        const data = await response.json();
        return data;
    }

    async function fetchPutData(route, body) {
        const response = await fetch(`${route}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json', 
                'charset': 'utf-8'
            },
            body: JSON.stringify(body)
        });
        const data = await response.json();
        return data;
    }

    async function fetchDeleteData(route) {
        const response = await fetch(`${route}`, {
            method: 'DELETE'
        });
        const data = await response.json();
        return data;
    }

    function showModal(index) {
        currentIndex = index;
        @* console.log('getview', index);
        console.log('listProduct', listProduct); *@
        const modalBody = document.getElementById('modal-body-product');
        let body = '';
        body += '<form>';
        body += '<div class="mb-3">';
        body += '<label for="modal-text-title" class="col-form-label">Title:</label>';
        body += '<input type="text" class="form-control" id="modal-text-title" value="' + getValueFormIndex(index,'title') + '">';
        body += '</div>';
        body += '<div class="mb-3">';
        body += '<label for="modal-text-description" class="col-form-label">Description:</label>';
        body += '<textarea class="form-control" id="modal-text-description" rows="4">' + getValueFormIndex(index,'description') + '</textarea>';
        body += '</div>';
        body += '<div class="mb-3 row">';
        body += '<div class="col-6">';
        body += '<label for="modal-text-price" class="col-form-label">Price:</label>';
        body += '<input type="number" class="form-control" id="modal-text-price" value="' + getValueFormIndex(index,'price') + '">';
        body += '</div>';
        body += '<div class="col-6">';
        body += '<label for="modal-text-discountPercentage" class="col-form-label">DiscountPercentage:</label>';
        body += '<input type="number" class="form-control" id="modal-text-discountPercentage" value="' + getValueFormIndex(index,'discountPercentage') + '">';
        body += '</div>';
        body += '</div>';
        body += '<div class="mb-3">';
        body += '<label for="modal-text-thumbnail" class="col-form-label">Thumbnail:</label>';
        body += '<input type="text" class="form-control" id="modal-text-thumbnail" value="' + getValueFormIndex(index,'thumbnail') + '">';
        body += '</div>';
        body += '<div class="mb-3 row">';
        body += '<div class="col-6">';
        body += '<label for="modal-text-rating" class="col-form-label">Rating:</label>';
        body += '<input type="number" class="form-control" id="modal-text-rating" value="' + getValueFormIndex(index,'rating') + '">';
        body += '</div>';
        body += '<div class="col-6">';
        body += '<label for="modal-text-stock" class="col-form-label">Stock:</label>';
        body += '<input type="number" class="form-control" id="modal-text-stock" value="' + getValueFormIndex(index,'stock') + '">';
        body += '</div>';
        body += '</div>';
        body += '<div class="mb-3 row">';
        body += '<div class="col-6">';
        body += '<label for="modal-text-brand" class="col-form-label">Brand:</label>';
        body += '<input type="text" class="form-control" id="modal-text-brand" value="' + getValueFormIndex(index,'brand') + '">';
        body += '</div>';
        body += '<div class="col-6">';
        body += '<label for="modal-text-category" class="col-form-label">Category:</label>';
        body += '<input type="text" class="form-control" id="modal-text-category" value="' + getValueFormIndex(index,'category') + '">';
        body += '</div>';
        body += '</div>';
        // add images same thumbnail
        @* body += '<div class="mb-3">';
        body += '<label for="modal-text-images" class="col-form-label">Images:</label>';
        body += '<input type="text" class="form-control" id="modal-text-images" value="' + getValueFormIndex(index,'images') + '">';
        body += '</div>'; *@

        body += '</div>';

        
        body += '</form>';
        modalBody.innerHTML = body;



        const modalFooter = document.getElementById('modal-footer-product');
        let footer = '';
        footer += '<div>';
        if(currentIndex >= 0){
            footer += '<button type="button" class="btn btn-danger float-left" onclick="onConfrimDeleteButton()">Delete</button>';
        }
        footer += '</div>';
        footer += '<div>';
        footer += '<button type="button" class="btn btn-secondary" data-bs-dismiss="modal" style="margin-right:16px;">Close</button>';
        footer += '<button type="button" class="btn btn-primary" onclick="onConfrimSaveButton()">Save</button>';
        footer += '</div>';
        modalFooter.innerHTML = footer;
    }
    

    function getValueModal() {
        console.log('onSaveModal', currentIndex);
        // get value from modal
        const title = document.getElementById('modal-text-title').value;
        const description = document.getElementById('modal-text-description').value;
        const price = document.getElementById('modal-text-price').value;
        const discountPercentage = document.getElementById('modal-text-discountPercentage').value;
        const thumbnail = document.getElementById('modal-text-thumbnail').value;
        const rating = document.getElementById('modal-text-rating').value;
        const stock = document.getElementById('modal-text-stock').value;
        const brand = document.getElementById('modal-text-brand').value;
        const category = document.getElementById('modal-text-category').value;

        const obj = {
            id: currentIndex >= 0 ? listProduct[currentIndex].id : 0,
            title: `${title}`,
            description: `${description}`,
            price: `${price}`,
            discountPercentage: `${discountPercentage}`,
            thumbnail: `${thumbnail}`,
            rating: `${rating}`,
            stock: `${stock}`,
            brand: `${brand}`,
            category: `${category}`,
            images: []
            };

        obj.price = isEmptyReturnZeroNumber(obj.price); 
        obj.discountPercentage = isEmptyReturnZeroNumber(obj.discountPercentage);
        obj.rating = isEmptyReturnZeroNumber(obj.rating);
        obj.stock = isEmptyReturnZeroNumber(obj.stock);


        if(currentIndex < 0){
           onCreateModal(obj);
           return ;
        }

        onSaveModal(obj);
    }   


    async function onCreateModal(obj){
         // fetch post data
         
            const response = await fetchPostData('addItem', obj);
            console.log('response', response);
            if (!response) {
                return;
            }

            Swal.fire({
                title: "Add Items!",
                text: "Your add Success.",
                icon: "success"
            });

            // reload table
            loadItems('closeModal');
    }


    async function onSaveModal(obj) { 
        // fetch put data
        const response = await fetchPutData('updateItem', obj);
        console.log('response', response);
        if (!response) {
            return;
        }

        Swal.fire({
            title: "Update Items!",
            text: "Your updpdate Success.",
            icon: "success"
        });

        // reload table
        loadItems('closeModal');
    }

    async function onDeleteModal() {
        console.log('onDeleteModal', currentIndex);
        // fetch delete data
        const response = fetchDeleteData('deleteItem/' + listProduct[currentIndex].id);
         if (!response) {
            return;
        }

        Swal.fire({
            title: "Delete Items!",
            text: "Your delete Success.",
            icon: "success"
        });

        // reload table
        loadItems('closeModal');
    }

    function onConfrimSaveButton() {
        const title = document.getElementById('modal-text-title').value;
        const replaceTitle = replaceSpace(title);
        if(replaceTitle === ''){
            Swal.fire({
                title: "Error!",
                text: "Please enter title.",
                icon: "error"
            });
            return;
        }

        Swal.fire({
            title: "Are you sure?",
            text: `You want to ${currentIndex > 0 ? 'update' : 'create' } ${title}!`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: `Yes ${currentIndex > 0 ? 'Update' : 'Create'}!`
        }).then((result) => {
            if (result.isConfirmed) {
                getValueModal();
            }
        });
    }

    function onConfrimDeleteButton() {
        const title = document.getElementById('modal-text-title').value;
        Swal.fire({
            title: "Are you sure?",
            text: `You want to delete ${title}!`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes Delete!"
        }).then((result) => {
            if (result.isConfirmed) {
                onDeleteModal();
            }
        });
    }

    function getValueFormIndex(index , field){
        if(index < 0 || index >= listProduct.length){
            return '';
        }
        console.log('getValueFormIndex', index, field);
        return listProduct[index][field];
    }

    function replaceSpace(value){
        return String(value).split(' ').join('');
    }

    function isEmptyReturnZeroNumber(value){
        const result = replaceSpace(value);
        if(result === ''){
            return 0;
        }
        return value;
    }

</script>

<div class="w-100 my-3">
    <div class="row">
        <div class="col">
            <h1>Product</h1>
        </div>
        <div class="col">
            <button type="button" class="btn btn-primary float-end" data-bs-toggle="modal"
                data-bs-target="#staticBackdrop" onclick="showModal(-1)">Add Product</button>

            <div class="input-group flex-nowrap">
                <span class="input-group-text" id="addon-wrapping"><i class="fas fa-search"></i></span>
                <input type="text" class="form-control" placeholder="Search-Something" aria-label="Search-Something"
                    aria-describedby="addon-wrapping-search" id="input-search">
            </div>
        </div>
    </div>

</div>

<table class="table table-light w-100 table-hover" id="table-product">
    <thead style="background-color: black;color:white;position:sticky;top:57px;">
        <tr>
            <th style="width: 5%;background-color:inherit;">แก้ไข</th>
            <th style="width: 10%;background-color:inherit;">หัวข้อ</th>
            <th style="width: 15%;background-color:inherit;">รายละเอียดสินค้า</th>
            <th style="width: 10%;background-color:inherit;">ราคา</th>
            <th style="width: 10%;background-color:inherit;">ลดราคา (%)</th>
            <th style="width: 10%;background-color:inherit;">thumbnail</th>
            <th style="width: 10%;background-color:inherit;">เรทติ้ง</th>
            <th style="width: 10%;background-color:inherit;">สินค้าคงเหลือ</th>
            <th style="width: 10%;background-color:inherit;">ยี่ห้อ</th>
            <th style="width: 10%;background-color:inherit;">หมวดหมู่</th>
        </tr>
    </thead>
    <tbody id="table-tbody-detail">
    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modal-body-product">
            </div>
            <div class="modal-footer" id='modal-footer-product' style="justify-content:space-between;">
            </div>
        </div>
    </div>
</div>